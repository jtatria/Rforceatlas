% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R, R/igraph.R, R/live.R
\name{forceatlas}
\alias{forceatlas}
\alias{layout_with_fa2}
\alias{with_fa2}
\alias{forceatlas_live}
\title{ForceAtlas2 graph layout algortihm}
\usage{
forceatlas(m, init = NULL, center = NULL, dim = 2L, iter = 100L,
  delta = 1, tol = 1, k = 10, G = 1, linlog = FALSE, strong = FALSE,
  nohubs = FALSE, overlap = FALSE)

layout_with_fa2(g, attr = "weight", live = FALSE, ...)

with_fa2(...)

forceatlas_live(m, iter = 100, step = 10, dim = 2,
  init = matrix(runif(nrow(m) * dim, -1, 1) * 1000, nrow(m), dim), ...)
}
\arguments{
\item{m}{An adjacency matrix.}

\item{init}{Numeric matrix of dimensions nrow( m ) * dim giving initial vertex location.
Defaults to random locations in a -1,1 square.}

\item{center}{Numeric vector of length equal to dim specifying the location of the plot center.
Defaults to origin (\code{rep( 0, length( dim ) )}).}

\item{dim}{Integer. Number of dimensions to position vertices against. Defaults to 2.}

\item{iter}{Integer, number of iterations.}

\item{delta}{Numeric. Exponent to weight attraction forces according to the entries in m.}

\item{tol}{Numeric. Tolerance to swinging. Defaults to .1}

\item{k}{Numeric. Repulsion scaling factor. Defaults to 400.}

\item{G}{Numeric. Gravity scaling factor. Defaults to 1.}

\item{linlog}{Logical. Use log( distance ) for initial attraction forces instead of plain
distance. Defaults to FALSE.}

\item{nohubs}{Logical. Dissuade hubs, placing authorities closer to the center. Defaults to
FALSE.}

\item{live}{Logical. If TRUE, attempt to plot intermediate convergence steps.}

\item{...}{Passed to \code{layout_with_fa2}}

\item{step}{Integer. How many iterations to run in-between frames.}

\item{ks}{Numeric. Local speed scaling factor. Defaults to .1.}

\item{ksmax}{Numeric. Maximum local speed. Defaults to 10.}

\item{...}{Passed to \code{forceatlas}}
}
\value{
A numeric matrix with as many rows as vertices and as many columns as dim giving the
        locations of the vertices in the requested R^dim space.
}
\description{
Place vertices on an n-dimensional space using the ForceAtlas2 algorithm by
Jacomy et al. (2014), originally developed in Java for the Gephi graph analysis software.
This implementation has been written from scratch in C++ following the R implementation by
Klockiewicz and Álvarez.
}
\details{
A full description of the algorithm and all of its parameters can be found in the reference
below.
}
\references{
Jacomy, Mathieu, Tommaso Venturini, Sebastien Heymann, and Mathieu Bastian. "ForceAtlas2, a
Continuous Graph Layout Algorithm for Handy Network Visualization Designed for the Gephi
Software." PLOS ONE 9, no. 6 (June 10, 2014): e98679.
\link{https://doi.org/10.1371/journal.pone.0098679}.
}
\author{
José Tomás Atria \email{jtatria@gmail.com}
}
